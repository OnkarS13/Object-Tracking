## Configurable Parameters

This table summarizes the parameters you can change in the object tracking scripts (`run_tracking.py` and `object_tracker.py`).

| File                | Parameter Type      | Parameter Name/Argument   | Default / Example Value       | Description / How to Change                                                                                                                               |
| :------------------ | :------------------ | :------------------------ | :---------------------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **run_tracking.py** | Command-Line Arg    | `--model`                 | *(Required)* | Path to the ONNX model file (`.onnx`). Provide the correct path via command line.                                                                         |
| `run_tracking.py`   | Command-Line Arg    | `--video`                 | `''` (Empty String)           | Path to the input video file. Provide path via command line. Cannot be used with `--image_dir` or `--camera_id`.                                           |
| `run_tracking.py`   | Command-Line Arg    | `--image_dir`             | `''` (Empty String)           | Path to the directory of input images. Provide path via command line. Cannot be used with `--video` or `--camera_id`.                                      |
| `run_tracking.py`   | Command-Line Arg    | `--camera_id`             | `-1`                          | Integer index of the camera to use (e.g., 0, 1). Provide index via command line. Cannot be used with `--video` or `--image_dir`.                        |
| `run_tracking.py`   | Command-Line Arg    | `--output_dir`            | `'output_tracking'`           | Directory path for saving results. Change via command line.                                                                                               |
| `run_tracking.py`   | Command-Line Arg    | `--save_video`            | *(Flag, False)* | Add the flag to the command to save output video (`.avi`).                                                                                                |
| `run_tracking.py`   | Command-Line Arg    | `--save_frames`           | *(Flag, False)* | Add the flag to the command to save individual output frames (`.jpg`).                                                                                     |
| `run_tracking.py`   | Command-Line Arg    | `--display`               | *(Flag, False)* | Add the flag to the command to show the live tracking window.                                                                                             |
| `run_tracking.py`   | Command-Line Arg    | `--conf_thresh`           | `0.4`                         | Detection confidence threshold (0.0 to 1.0). Change value via command line. Passed to `ObjectTracker`.                                                    |
| `run_tracking.py`   | Command-Line Arg    | `--iou_thresh`            | `0.45`                        | NMS IoU threshold (0.0 to 1.0). Change value via command line. Passed to `ObjectTracker`.                                                                 |
| `run_tracking.py`   | Command-Line Arg    | `--classes`               | `'car,motorbike,person'`      | Comma-separated class names matching model output order. Change string via command line. Passed to `ObjectTracker`.                                      |
| `run_tracking.py`   | Hardcoded (Video)   | Output Video Filename     | `"tracked_output.avi"`        | Edit the string in the `process_capture` function within the `cv2.VideoWriter` call.                                                                        |
| `run_tracking.py`   | Hardcoded (Video)   | Output Video Codec        | `cv2.VideoWriter_fourcc(*'XVID')` | Edit the fourcc code (e.g., `'MP4V'`) in `process_capture`. Compatibility depends on OpenCV install.                                                     |
| `run_tracking.py`   | Hardcoded (Frames)  | Frame Saving Interval     | `fps` (approx. 1/sec)         | Modify the `frame_count % frame_save_interval == 0` condition in `process_capture`. Remove condition to save all frames.                                  |
| `run_tracking.py`   | Hardcoded (Frames)  | Saved Frame Format        | `f"frame_{frame_count:06d}.jpg"` | Edit the f-string formatting or change `.jpg` extension in `process_capture`.                                                                             |
| **object_tracker.py** | Init Argument       | `onnx_model_path`         | *(From `--model`)* | Set via the `--model` argument in `run_tracking.py`.                                                                                                      |
| `object_tracker.py` | Init Argument       | `class_names`             | *(From `--classes`)* | Set via the `--classes` argument in `run_tracking.py`.                                                                                                    |
| `object_tracker.py` | Init Argument       | `confidence_threshold`    | *(From `--conf_thresh`)* | Set via the `--conf_thresh` argument in `run_tracking.py`. Used in `postprocess_output_onnx`.                                                            |
| `object_tracker.py` | Init Argument       | `iou_threshold`           | *(From `--iou_thresh`)* | Set via the `--iou_thresh` argument in `run_tracking.py`. Used in `postprocess_output_onnx`.                                                            |
| `object_tracker.py` | Hardcoded (Model)   | `self.input_width`        | `640`                         | Edit in `__init__`. **Must match the ONNX model's expected input width.** |
| `object_tracker.py` | Hardcoded (Model)   | `self.input_height`       | `640`                         | Edit in `__init__`. **Must match the ONNX model's expected input height.** |
| `object_tracker.py` | Hardcoded (Model)   | ONNX Runtime Providers    | `['CUDA', 'CPU']` or `['CPU']`| Edit the logic selecting providers in `__init__` to force CPU or GPU (if available).                                                                        |
| `object_tracker.py` | DeepSORT Tuning     | `max_cosine_distance`     | `0.4`                         | Edit in `__init__`. Controls appearance matching strictness (lower is stricter). **Key tuning parameter.** |
| `object_tracker.py` | DeepSORT Tuning     | `nn_budget`               | `100`                         | Edit in `__init__`. Size of appearance feature gallery per track (or `None` for infinite). **Key tuning parameter.** |
| `object_tracker.py` | DeepSORT Tuning     | `metric`                  | `"cosine"`                    | Edit the metric type string (`"cosine"` or `"euclidean"`) in `nn_matching.NearestNeighborDistanceMetric` call in `__init__`.                            |
| `object_tracker.py` | DeepSORT Tuning     | `max_iou_distance`        | `0.7` (Default in library)    | Edit the `Tracker(...)` call in `__init__` to pass `max_iou_distance=...`. Controls IoU matching threshold.                                             |
| `object_tracker.py` | DeepSORT Tuning     | `max_age`                 | `70` (Default in library)     | Edit the `Tracker(...)` call in `__init__` to pass `max_age=...`. Frames before track deletion. **Key tuning parameter.** |
| `object_tracker.py` | DeepSORT Tuning     | `n_init`                  | `3` (Default in library)      | Edit the `Tracker(...)` call in `__init__` to pass `n_init=...`. Frames to confirm a track. **Key tuning parameter.** |
| `object_tracker.py` | Feature Extractor   | `extractor_model_path`    | `"./deep_sort_pytorch/..."`   | Edit the path construction in `__init__` if using a different ReID model checkpoint (`ckpt.t7`).                                                          |
| `object_tracker.py` | Feature Extractor   | `use_cuda_extractor`      | `torch.cuda.is_available()`   | Edit the `Extractor(...)` call in `__init__` to pass `use_cuda=False` to force CPU for feature extraction.                                                |
| `object_tracker.py` | Visualization       | `np.random.seed(42)`      | `42`                          | Edit the seed value in `__init__` for different random colors.                                                                                            |
| `object_tracker.py` | Visualization       | `self.colors`             | Randomly generated            | Edit in `__init__` to assign specific BGR color tuples per class instead of random generation.                                                            |
| `object_tracker.py` | Visualization       | Box Thickness             | `2`                           | Edit the `thickness` parameter in `cv2.rectangle` call within `draw_tracks`.                                                                              |
| `object_tracker.py` | Visualization       | Font Type                 | `cv2.FONT_HERSHEY_SIMPLEX`    | Edit the font constant in `cv2.putText` calls within `draw_tracks`.                                                                                       |
| `object_tracker.py` | Visualization       | Font Scale                | `0.5` (label), `0.8` (count)  | Edit the `fontScale` parameter in `cv2.putText` calls within `draw_tracks`.                                                                               |
| `object_tracker.py` | Visualization       | Font Thickness            | `1` (label), `2` (count)      | Edit the `thickness` parameter in `cv2.putText` calls within `draw_tracks`.                                                                               |
| `object_tracker.py` | Visualization       | Label Format              | `f"{class_name}-{track_id}"`  | Edit the f-string creating the `label` variable within `draw_tracks`.                                                                                     |

